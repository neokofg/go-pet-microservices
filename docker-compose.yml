version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - CATALOG_SERVICE_ADDR=catalog-service:9090
      - SEARCH_SERVICE_ADDR=search-service:9090
      - RECOMMEND_SERVICE_ADDR=recommendation-service:9090
      - GIN_MODE=release
    depends_on:
      - catalog-service
    networks:
      - backend

  catalog-service:
    build:
      context: ./catalog-service
      dockerfile: Dockerfile
    ports:
      - "9090:9090"  # gRPC
      - "8081:8080"  # HTTP (админка)
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/catalog?sslmode=disable
      - GRPC_PORT=9090
      - HTTP_PORT=8080
      - GIN_MODE=release
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=catalog
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:
    driver: bridge